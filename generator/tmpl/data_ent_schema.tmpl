{{- /*gotype: github.com/yoogoc/kratos-scaffold/generator.Data*/ -}}
package schema

import (
	"time"

	"entgo.io/ent"
	"entgo.io/ent/schema/field"
)

// {{ .Name }} holds the schema definition for the {{ .Name }} entity.
type {{ .Name }} struct {
	ent.Schema
}

// Fields of the {{ .Name }}.
func ({{ .Name }}) Fields() []ent.Field {
	return []ent.Field{
		{{- range $i, $f := .EntFields }}
		{{- if $f.FieldType.IsJson }}
			field.{{ $f.FieldType.StringEnt }}("{{$f.Name | ToSnake}}", map[string]any{}).Optional(),
		{{- else }}
			{{- if $f.IsArray }}
				field.JSON("{{$f.Name | ToSnake}}", []{{$f.FieldType.String}}{}).Optional(),
			{{- else }}
				{{- if eq $f.Name "id" }}
				field.{{ $f.FieldType.StringEnt }}("{{$f.Name | ToSnake}}"),
				{{- else }}
				field.{{ $f.FieldType.StringEnt }}("{{$f.Name | ToSnake}}"){{- if $f.IsNillable }}.Nillable(){{- end }}.Optional(),
				{{- end }}

			{{- end }}
		{{- end }}
		{{- end }}
		{{- if .NeedAuditField }}
		field.Time("created_at").Immutable().Default(time.Now),
		field.Time("updated_at").Default(time.Now).UpdateDefault(time.Now),
		{{- end }}
	}
}

// Edges of the {{ .Name }}.
func ({{ .Name }}) Edges() []ent.Edge {
	return nil
}
